# This configuration file was automatically generated by Gitpod.
# Please adjust to your needs (see https://www.gitpod.io/docs/introduction/learn-gitpod/gitpod-yaml)
# and commit this file to your remote git repository to share the goodness with others.

# Learn more from ready-to-use templates: https://www.gitpod.io/docs/introduction/getting-started/quickstart

tasks:
  - name: Setup PostgreSQL and Python Dependencies
    init: |
      # Update package list and install PostgreSQL
      sudo apt-get update
      sudo apt-get install -y postgresql postgresql-contrib libpq-dev

      # Ensure postgres user exists (apt should do this, but as a fallback)
      sudo id postgres &>/dev/null || sudo useradd -m -s /bin/bash postgres
      
      # Define PGDATA - standard location for version 14
      export PGDATA=/var/lib/postgresql/14/main
      sudo mkdir -p $PGDATA
      sudo chown -R postgres:postgres /var/lib/postgresql/
      sudo chmod -R 700 /var/lib/postgresql/

      # Initialize cluster if it hasn't been initialized
      # The 'postgresql-14' package should have done this, but this is a fallback.
      # We check for a file that initdb creates.
      if [ ! -f "$PGDATA/PG_VERSION" ]; then
        echo "Initializing PostgreSQL cluster..."
        sudo -u postgres /usr/lib/postgresql/14/bin/initdb -D $PGDATA --auth-local peer --auth-host scram-sha-256 --no-instructions
      else
        echo "PostgreSQL cluster already initialized."
      fi

      # Start PostgreSQL server directly using pg_ctl as user postgres
      echo "Attempting to start PostgreSQL server..."
      sudo -u postgres /usr/lib/postgresql/14/bin/pg_ctl -D $PGDATA -l /var/log/postgresql/postgresql-14-main.log start
      
      # Wait a few seconds for PostgreSQL to start
      sleep 5

      # Create database and user if they don't exist
      # Assumes postgres user can connect locally without password (peer authentication)
      DB_USER=${DB_USER:-optimagest_user_default}
      DB_PASSWORD=${DB_PASSWORD:-password_default}
      DB_NAME=${DB_NAME:-optimagest_db_default_name}

      sudo -u postgres psql -tc "SELECT 1 FROM pg_user WHERE usename = '$DB_USER'" | grep -q 1 || \
        sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
      
      sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME || \
        sudo -u postgres psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USER;"

      # Install Python dependencies
      pip install -r requirements.txt
    command: |
      echo "PostgreSQL setup complete. Python dependencies installed."
      echo "Starting Django development server..."
      # Apply migrations
      python manage.py migrate
      # Start Django server
      python manage.py runserver 0.0.0.0:8000

ports:
  - port: 5432
    onOpen: ignore
    visibility: private
  - port: 8000
    onOpen: open-preview
    visibility: public

vscode:
  extensions:
    - ms-python.python
    - batisteo.vscode-django
